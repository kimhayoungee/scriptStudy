<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
	<head>
		<meta charset="EUC-KR">
		<title>Insert title here</title>
	</head>
<body>

	<script>
/* 	Objects
	one of the JavaScript's data types
	a collection of related data and/or functionality
	Nearly all objects in JavaScript are instances of Object
	object = { key : value }; */
	
		//1. Literals and properties
		const name='ellie';
		const age = 4;
		/*		print(name, age);
 		funtcion print(name, age){
			console.log(name);
			console.log(age);
		} */
		function print(person){
			console.log(person.name);
			console.log(person.age);
		}
		const ellie = { name: 'ellie', age: 4};
		print(ellie);
		
		const obj1 = {}; 		   //'object literal' syntax
		const obj2 = new Object(); //'object constructor' syntax
		
		//dynamically typed language 동적으로 runtime 때 타입이 결정되는 언어
		ellie.hasJob = true; 
		console.log(ellie.hasJob);
		
		delete ellie.hasJob;
		console.log(ellie.hasJob);
		
		//2. Computed properties
		//key should be always string ''
		console.log(ellie.name);	//코딩하는 순간 그 key에 해당하는 값을 받아오고 싶을 때  
		console.log(ellie['name']); //정확하게 어떤 key가 필요한 지 모를 때 
		ellie['hasJob'] = true;
		console.log(ellie.hasJob);
		
		function printValue(obj, key){
			//console.log(obj.key); key를 모르기 때문에 undefined
			console.log(obj[key]);
			//동적으로 key의 value를 받아와야 할 때 computed properties 사용 
		}
		printValue(ellie, 'name');
		printValue(ellie, 'age');
		
		//3. Property value shorthand
		const person1 = { name: 'bob', age: 2 };
		const person2 = { name: 'steve', age: 3 };
		const person3 = { name: 'dave', age: 4 };
		
		function makePerson(name, age){
			return {
				 name: name
				,age: age
			};
		}
		
	</script>

</body>
</html>